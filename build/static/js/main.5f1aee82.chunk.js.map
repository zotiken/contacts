{"version":3,"sources":["images/person_add-24px.svg","images/edit-24px.svg","components/Button/Button.js","components/ItemList/ItemList.js","components/Header/Header.js","components/Modal/Modal.js","Pages/Contacts/Contacts.js","components/Notification/Notification.js","Pages/SignIn/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","className","type","push","join","onClick","icon","src","children","ItemList","item","name","email","phone","edit","setmodal","id","Header","onChange","e","setsearchValue","target","value","onInputSearch","placeholder","searchValue","add","userInfoInit","address","street","suite","city","zipcode","geo","company","catchPhrase","bs","username","website","Modal","useState","title","settitle","setname","setemail","tel","settel","setinfo","setshow","onSunbmit","userInfo","preventDefault","modal","state","length","setTimeout","editContanct","addContanct","useEffect","filter","onSubmit","onInput","Contacts","setstate","a","axios","get","response","data","renderList","params","substr","split","getUser","map","i","key","forEach","Notification","show","this","info","Component","user","SignIn","password","setpassword","router","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","replace","pathname","query","queryString","parse","search","useRouter","onLogIn","App","isAuth","setisAuth","loading","setisloading","path","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f1aee82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/person_add-24px.8935f555.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-24px.539b3c38.svg\";","import React from \"react\";\r\nimport \"./Button.scss\";\r\n\r\nexport default function Button(props) {\r\n  const className = [\"button\"];\r\n  if (props.type === 'add') {\r\n    className.push('add');\r\n  } else if(props.type === 'submit') {\r\n    className.push('submit');\r\n  }\r\n  return (\r\n  <button className={className.join(' ')} onClick={props.onClick}>{props.icon ? <img src={props.icon}></img>  : ''}{props.children}</button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ItemList.scss\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport edit from '../../images/edit-24px.svg'\r\n\r\nexport default function ItemList(props) {\r\n  const item = props.item;\r\n  return (\r\n    <li className=\"item\">\r\n      {/* <span className=\"item__id\">{item.id}</span> */}\r\n      <div className='item__container'>\r\n        <span className=\"item__name\"><i>Имя:</i> {item.name}</span>\r\n        <span className=\"item__email\"><i>Почта:</i> {item.email}</span>\r\n        <span className=\"item__phone\"><i>Тел:</i> {item.phone}</span>\r\n      </div>\r\n      <Button icon={edit} onClick={() => props.setmodal({id:item.id})}>Редактировать</Button>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './Header.scss'\r\nimport Button from \"../../components/Button/Button\"\r\nimport add from '../../images/person_add-24px.svg'\r\n\r\n\r\nexport default function Header(props) {\r\n\r\n\r\n    function onInputSearch(e) {\r\n        props.setsearchValue(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h2 className='header__title visually-hidden'>Hello World</h2>\r\n            <div className='header__actions'>\r\n                <input className='header__search' onChange={(e) => onInputSearch(e)} type=\"text\" placeholder='Что будем искать?' value={props.searchValue}/>\r\n                <Button type='add' onClick={() => props.setmodal('add')}  icon={add} className='header__button'>Добавить</Button>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Modal.scss'\r\nimport Button from \"../../components/Button/Button\"\r\nimport add from '../../images/person_add-24px.svg'\r\n\r\n\r\n  const userInfoInit = {\r\n    address: {street: \"Lenina\", suite: \"Apt. 556\", city: \"Tula\", zipcode: \"31655\", geo: {}},\r\n    company: {name: \"Staff\", catchPhrase: \"Multi-layered client-server neural-net\", bs: \"harness real-time e-markets\"},\r\n    email: \"\",\r\n    id: null,\r\n    name: \"\",\r\n    phone: \"\",\r\n    username: \"Noname\",\r\n    website: \"google.com\"\r\n  } ;\r\n\r\n  \r\nexport default function Modal(props) {\r\n\r\n    const [title, settitle] = useState('Добавить')\r\n    const [name, setname] = useState('')\r\n    const [email, setemail] = useState('')\r\n    const [tel, settel] = useState('')\r\n\r\n    const [info, setinfo] = useState('')\r\n    const [show, setshow] = useState(false)\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.modal.id) {\r\n            settitle('Редактировать')\r\n            setname(props.state.filter(item => item.id === props.modal.id)[0].name)\r\n            setemail(props.state.filter(item => item.id === props.modal.id)[0].email) \r\n            settel(props.state.filter(item => item.id === props.modal.id)[0].phone)  \r\n        } \r\n    },[])\r\n  \r\n    function onSunbmit(e) {\r\n      e.preventDefault();\r\n      let userInfo;\r\n      if (name && email && tel) {\r\n        userInfo = {...props.modal.id ? props.state[props.modal.id] : userInfoInit,id:props.modal.id ? props.modal.id : props.state.length+1,name:name,email:email,phone:tel} \r\n      } \r\n      else if (!name && email && tel) {\r\n        setinfo('введите имя!')\r\n        setshow(true)\r\n        setTimeout(() => {\r\n          setshow(false)\r\n          setinfo('')\r\n        }, 2000);\r\n      }  else if (name && !email && tel) {\r\n        setinfo('введите почту!')\r\n        setshow(true)\r\n        setTimeout(() => {\r\n          setshow(false)\r\n          setinfo('')\r\n        }, 2000);\r\n      }\r\n      else {\r\n        setinfo('Ошибка!')\r\n        setTimeout(() => {\r\n  \r\n          setinfo('')\r\n        }, 1000);\r\n      }\r\n      !props.modal.id ? props.addContanct(userInfo) : props.editContanct(userInfo, props.modal.id )\r\n\r\n      props.setmodal(false)\r\n    }\r\n  \r\n    function onInputSearch(e) {\r\n        props.setsearchValue(e.target.value)\r\n    }\r\n\r\n  // props.modal.id &&  settitle('Редактировать')\r\n    return (\r\n        <>\r\n        <div className={`overlay ${!props.modal && 'visually-hidden'}`} onClick={() => props.setmodal(false)}></div>\r\n        <div className={`modal ${!props.modal && 'visually-hidden'}`}>\r\n            <form className='modal__form form' onSubmit={(e)=> onSunbmit(e)}>\r\n            <h2 className='form__title'>{`${title} пользователя`}</h2>\r\n        <label  className='form__label'>\r\n        <input className='form__input' type=\"text\" value={name} onInput={(e) => setname(e.target.value) }/>\r\n        <p className={name.length > 0 ? 'fixed' : ''}>имя:</p>\r\n        </label>\r\n        <label  className='form__label'>\r\n        <input className='form__input' type=\"email\" value={email} onInput={(e) => setemail(e.target.value)}/>\r\n        <p className={email.length > 0 ? 'fixed' : ''}> почта:</p>\r\n        </label>\r\n        <label  className='form__label'>\r\n        <input className='form__input' type=\"text\" value={tel} onInput={(e) => settel(e.target.value) }/>\r\n        <p className={tel.length > 0 ? 'fixed' : ''}>тел:</p>\r\n        </label>\r\n        <Button type='submit' onClick={(e)=> onSunbmit(e) }>{title}</Button>\r\n      </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react';\r\nimport './Contacts.scss';\r\n\r\nimport axios from 'axios'\r\nimport ItemList from \"../../components/ItemList/ItemList\"\r\nimport Header from \"../../components/Header/Header\"\r\nimport Modal from \"../../components/Modal/Modal\"\r\n\r\nexport default function Contacts() {\r\n  const [state, setstate] = useState([])\r\n  const [searchValue, setsearchValue] = useState(null)\r\n  const [modal, setmodal] = useState(false)\r\n  const [show, setshow] = useState(false)\r\n\r\n  async function getUser() {\r\n    try {\r\n      const response = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n      setstate(response.data)\r\n      return response.data\r\n    } catch (error) {\r\n    }\r\n  }\r\n  \r\n   useEffect(()=>{\r\n   getUser();\r\n  },[])\r\n\r\n  function addContanct(params) { \r\n    setstate([...state,params])\r\n  }\r\n\r\n  function editContanct(params, id) { \r\n    const{name,phone, email} = params\r\n\r\n    var edit  = [...state]\r\n    edit.forEach(item =>{ if(item.id === id) {item.name = name; item.email = email;item.phone = phone}})\r\n    setstate([...edit])\r\n  }\r\n\r\n\r\n\r\n  function renderList(params) {\r\n    if (searchValue) {\r\n      return state.filter(item => item.name.substr(0, searchValue.length) === searchValue || item.name.split(' ')[1].substr(0, searchValue.length) === searchValue || item.phone.substr(0, searchValue.length) === searchValue)\r\n    } \r\n      return state\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Header searchValue={searchValue} setsearchValue={setsearchValue} setmodal={setmodal} />\r\n      <h1>Contacts</h1>\r\n      <ul className='contacts__list'>\r\n       {renderList().length ? renderList().map((item,i)=> <ItemList item={item} key={item.id} setmodal={setmodal} />):'Нет совпадений'}\r\n      </ul>\r\n     { modal &&<Modal modal={modal} setmodal={setmodal} addContanct={addContanct} editContanct={editContanct} state={state}/>}\r\n    </>\r\n  )\r\n}\r\n\r\n","import \"./Notification.scss\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class Notification extends Component {\r\n  show = (params) => {\r\n    // this.props.info = params\r\n    return \"regsrewgseg\";\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* {this.props.info ? ( */}\r\n          <div className={`notify ${this.props.show && 'show'}`}>\r\n            <h4>{this.props.info}</h4>\r\n          </div>\r\n        {/* ) : null} */}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState, useMemo} from 'react';\r\nimport './SignIn.scss';\r\n\r\nimport Button from \"../../components/Button/Button\"\r\nimport Notification from \"../../components/Notification/Notification\"\r\n\r\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\r\nimport queryString from 'query-string';\r\nconst user = {\r\n  id:\"vdvdsvsdvsdv\",\r\n  email: \"admin@mail.net\",\r\n  password: 'admin'\r\n}\r\n\r\n\r\nexport default function SignIn(props) {\r\n  const [email, setemail] = useState('admin@mail.net')\r\n  const [password, setpassword] = useState('admine')\r\n  const [info, setinfo] = useState('')\r\n  const [show, setshow] = useState(false)\r\n\r\n  const router = useRouter();\r\n  function onSunbmit(e) {\r\n    e.preventDefault();\r\n    if (user.email === email && user.password === password) {\r\n      props.onLogIn()\r\n      router.push('/contacts')\r\n    } else if (user.email !== email) {\r\n      setinfo('Такой адрес EMAIL не существует!')\r\n      setshow(true)\r\n      setTimeout(() => {\r\n        setshow(false)\r\n        setinfo('')\r\n      }, 2000);\r\n    }  else if (user.password !== password) {\r\n      setinfo('Введен неверный пароль!')\r\n      setshow(true)\r\n      setTimeout(() => {\r\n        setshow(false)\r\n        setinfo('')\r\n      }, 2000);\r\n    }\r\n    else {\r\n      setinfo('Ошибка!')\r\n      setTimeout(() => {\r\n\r\n        setinfo('')\r\n      }, 1000);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className='logIn'>\r\n      <h1>Авторизация</h1>\r\n      <form className='logIn__form form' onSubmit={(e)=> onSunbmit(e)}>\r\n        <label  className='form__label'>\r\n        <input className='form__email' type=\"email\" value={email} onInput={(e) => setemail(e.target.value) }/>\r\n        <p className={email.length > 0 ? 'fixed' : ''}>Email:</p>\r\n        </label>\r\n        <label  className='form__label'>\r\n        <input className='form__password' type=\"password\" value={password} onInput={(e) => setpassword(e.target.value)}/>\r\n        <p className={password.length > 0 ? 'fixed' : ''}> Password:</p>\r\n        </label>\r\n        <Button type='submit'>Отправить</Button>\r\n      </form>\r\n      <Notification show={show} info={info}/>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function useRouter() {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  // Return our custom router object\r\n  // Memoize so that a new object is only returned if something changes\r\n  return useMemo(() => {\r\n    return {\r\n      // For convenience add push(), replace(), pathname at top level\r\n      push: history.push,\r\n      replace: history.replace,\r\n      pathname: location.pathname,\r\n      // Merge params and parsed query string into single \"query\" object\r\n      // so that they can be used interchangeably.\r\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\r\n      query: {\r\n        ...queryString.parse(location.search), // Convert string to object\r\n        ...params\r\n      },\r\n      // Include match, location, history objects so we have\r\n      // access to extra React Router functionality if needed.\r\n      match,\r\n      location,\r\n      history\r\n    };\r\n  }, [params, match, location, history]);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\n\r\nimport \"./App.scss\";\r\n\r\nimport Contacts from \"./Pages/Contacts/Contacts\";\r\nimport SignIn from \"./Pages/SignIn/SignIn\";\r\nfunction App() {\r\n  const [isAuth, setisAuth] = useState(false);\r\n  const [loading, setisloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setisloading(false);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  function onLogIn() {\r\n    setisAuth(true);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n          <h1 className=\"visually-hidden\">Auth and Contacts</h1>\r\n          {loading ? (\r\n            <div className=\"preload\"></div>\r\n          ) : (\r\n            <Switch>\r\n              <Route path=\"/contacts\">\r\n                {isAuth ? (\r\n                  <Contacts isAuth={isAuth} />\r\n                ) : (\r\n                  <SignIn isAuth={isAuth} onLogIn={onLogIn} />\r\n                )}\r\n              </Route>\r\n              <Route path=\"/signIn\">\r\n                <SignIn isAuth={isAuth} onLogIn={onLogIn} />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                {isAuth ? (\r\n                  <Contacts isAuth={isAuth} />\r\n                ) : (\r\n                  <SignIn isAuth={isAuth} onLogIn={onLogIn} />\r\n                )}\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n        <footer></footer>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}